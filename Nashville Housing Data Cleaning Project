select *
from NashvilleHousing

-- Standardize date format
select SaleDate, convert(Date, SaleDate)
from NashvilleHousing

-- Using SQL to update date format
update NashvilleHousing
set SaleDate = convert(Date, SaleDate)

-- Or
ALTER TABLE NashvilleHousing ADD COLUMN SaleDateConverted DATE;

UPDATE NashvilleHousing
   SET SaleDateConverted = convert(Date, SaleDate)
   

-- Populate property address data
-- Locate data where null
select PropertyAddress
from NashvilleHousing
where PropertyAddress is null

-- Each PropertyAddress has its own ParcelID
select a.ParcelId, a.PropertyAddress, b.ParcelID, b.PropertyAddress, isnull(a.PropertyAddress,b.PropertyAddress)
from NashvilleHousing a
join NashvilleHousing b
on a.ParcelID = b.ParcelID
and a.[UniqueID ] <> b.[UniqueID ]

update a
set PropertyAddress = isnull (a.PropertyAddress,b.PropertyAddress)
from NashvilleHousing a
join NashvilleHousing b
on a.ParcelID = b.ParcelID
and a.[UniqueID ] <> b.[UniqueID ]
where a.PropertyAddress is null

-- Breaking up address into individual columns (Address, City, State)
select 
substring(PropertyAddress, 1, charindex(',', PropertyAddress) -1) as Address,
substring(PropertyAddress, charindex(',', PropertyAddress) +1, len(PropertyAddress) as City
from NashvilleHousing


-- Update data to separate street address and city into their own individual columns
alter table NashvilleHousing
Add PropertySplitAddress
update NashvilleHousing
set PropertySplitAddress = substring(PropertyAddress, 1, charindex(',', PropertyAddress) -1)

alter table NashvilleHousing
Add PropertySplitCity
update NashvilleHousing
set PropertySplitCity = substring(PropertyAddress, charindex(',', PropertyAddress) +1, len(PropertyAddress)


select OwnerAddress
from NashvilleHousing

select
parsename(replace(OwnerAddress, ',', '.'), 3) as address,
parsename(replace(OwnerAddress, ',', '.'), 2) as city,
parsename(replace(OwnerAddress, ',', '.'), 1) as state,
from NashvilleHousing

alter table NashvilleHousing
Add OwnerSplitAddress
update NashvilleHousing
set OwnerSplitAddress = parsename(replace(OwnerAddress, ',', '.'), 3)

alter table NashvilleHousing
Add OwnerSplitCity
update NashvilleHousing
set OwnerSplitCity = parsename(replace(OwnerAddress, ',', '.'), 2)

alter table NashvilleHousing
Add OwnerSplitState
update NashvilleHousing
set OwnerSplitState = parsename(replace(OwnerAddress, ',', '.'), 1)


-- Change Y and N to Yes and No, respectively, in "Sold as Vacant" field
-- Determine how many Y, N, Yes and No there are
select distinct(SoldAsVacant), count(SoldAsVacant)
from NashvilleHousing
group by SoldAsVacant

select SoldAsVacant,
case when SoldAsVacant = 'Y' then 'Yes'
when SoldAsVacant = 'N' then 'No'
else SoldAsVacant
end
from NashvilleHousing

update NashvilleHousing
set SoldAsVacant = case when SoldAsVacant = 'Y' then 'Yes'
when SoldAsVacant = 'N' then 'No'
else SoldAsVacant
end

-- Remove duplicates
With RowNumCTE as(
select *,
row_number () over (
partition by ParcelID, PropertyAddress, SalePrice, SaleDate, LegalReference
order by UniqueID
) row_num
from NashvilleHousing
order by ParcelD
)
delete *
from RowNumCTE
where row_num > 1

-- Delete unused columns
select *
from NashvilleHousing

alter table NashvilleHousing
drop column OwnerAddress, TaxDistrict, PropertyAddress, SaleDate